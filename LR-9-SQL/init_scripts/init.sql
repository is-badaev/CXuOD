-- Создание таблицы клиентов
CREATE TABLE IF NOT EXISTS Clients (
	"client_id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"full_name" VARCHAR(100) NOT NULL,
	"passport_series_number" BIGINT NOT NULL UNIQUE,
	PRIMARY KEY("client_id")
);

CREATE UNIQUE INDEX IF NOT EXISTS client_passport_series_number_idx ON Clients ("passport_series_number");
CREATE INDEX IF NOT EXISTS client_full_name_idx ON Clients ("full_name");

-- Создание таблицы автомобилей
CREATE TABLE IF NOT EXISTS Cars (
	"car_id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"model" VARCHAR(50) NOT NULL,
	"color" VARCHAR(50) NOT NULL,
	"year_of_manufacture" SMALLINT NOT NULL,
	"license_plate" VARCHAR(25) NOT NULL UNIQUE,
	"insurance_value" NUMERIC(12, 2) NOT NULL,
	"rental_price_per_day" NUMERIC(10, 2) NOT NULL,
	PRIMARY KEY("car_id")
);

CREATE INDEX IF NOT EXISTS car_model_idx ON Cars ("model");
CREATE UNIQUE INDEX IF NOT EXISTS car_license_plate_idx ON Cars ("license_plate");
CREATE INDEX IF NOT EXISTS car_rental_price_per_day_idx ON Cars ("rental_price_per_day");
CREATE INDEX IF NOT EXISTS car_insurance_value_idx ON Cars ("insurance_value");

-- Создание таблицы аренды
CREATE TABLE IF NOT EXISTS Rental (
	"rental_id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"client_id" INTEGER NOT NULL,
	"car_id" INTEGER NOT NULL,
	"start_date" DATE NOT NULL,
	"end_date" DATE NOT NULL,
	"rental_days" INTEGER NOT NULL,
	PRIMARY KEY("rental_id")
);

CREATE INDEX IF NOT EXISTS rental_car_id_idx ON Rental ("car_id");
CREATE INDEX IF NOT EXISTS rental_client_id_idx ON Rental ("client_id");

-- Создание таблицы страховок
CREATE TABLE IF NOT EXISTS Insurance (
	"insurance_id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"car_id" INTEGER NOT NULL,
	"insurance_value" NUMERIC(12, 2) NOT NULL,
	"insurance_fee" NUMERIC(10, 2) NOT NULL,
	PRIMARY KEY("insurance_id")
);

CREATE INDEX IF NOT EXISTS insurance_car_id_idx ON Insurance ("car_id");

-- Добавление внешних ключей
ALTER TABLE Rental
ADD FOREIGN KEY("client_id") REFERENCES Clients("client_id")
ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE Rental
ADD FOREIGN KEY("car_id") REFERENCES Cars("car_id")
ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE Insurance
ADD FOREIGN KEY("car_id") REFERENCES Cars("car_id")
ON UPDATE NO ACTION ON DELETE NO ACTION;

-- Вставка тестовых данных в таблицу клиентов
INSERT INTO Clients (full_name, passport_series_number) VALUES
('Короленко Виктор Владимирович', 2009123456),
('Пак Алла Анатольевна', 4510234567),
('Бредихин Алексей Вячеславович', 3121345678),
('Смирнов Иван Алексеевич', 4123456789),
('Иванова Ольга Дмитриевна', 5234567890),
('Сидоров Михаил Петрович', 6345678901),
('Кузнецов Алексей Сергеевич', 7456789012),
('Федоров Дмитрий Олегович', 8567890123),
('Морозова Анна Валентиновна', 9678901234),
('Васильев Артем Игоревич', 1089012345),
('Петров Сергей Николаевич', 2190123456),
('Григорьев Андрей Викторович', 3201234567),
('Егорова Наталья Ивановна', 4212345678),
('Максимов Владимир Павлович', 5223456789),
('Денисов Алексей Дмитриевич', 6234567890),
('Семенова Ирина Олеговна', 7245678901),
('Фролов Олег Константинович', 8256789012),
('Тихонов Александр Евгеньевич', 9267890123),
('Ковалева Оксана Сергеевна', 1034567890),
('Андреев Дмитрий Владиславович', 1145678901),
('Воронцова Марина Владимировна', 1256789012),
('Мельников Николай Игоревич', 1367890123),
('Романова Татьяна Васильевна', 1478901234),
('Гаврилов Сергей Олегович', 1589012345),
('Александрова Ксения Павловна', 1690123456),
('Гусев Дмитрий Иванович', 1701234567),
('Васильева Анна Петровна', 1812345678),
('Дмитриев Павел Анатольевич', 1923456789),
('Савельева Виктория Юрьевна', 2034567890),
('Лебедев Алексей Андреевич', 2145678901);

-- Вставка тестовых данных в таблицу автомобилей
INSERT INTO Cars (model, color, year_of_manufacture, license_plate, insurance_value, rental_price_per_day) VALUES
('Lada Granta Cross', 'Красный', 2022, 'О153УО68', 1000000, 1800),
('KIA PICANTO 3', 'Серебристый', 2020, 'Р303КТ68', 1350000, 2500),
('Volkswagen Caddy G3 рест', 'Серый', 2011, 'Н575НМ68', 1600000, 2200),
('Volkswagen Tiguan 2 рест R-line', 'Черный', 2021, 'Х283УМ136', 4300000, 7500),
('Toyota Camry XV70', 'Белый', 2022, 'А456СО136', 5600000, 6800),
('Hyundai Solaris', 'Синий', 2021, 'С789КЕ136', 2200000, 3000),
('Mercedes-Benz GLE', 'Черный', 2023, 'М987ОР136', 10400000, 15000),
('Ford Focus 3', 'Белый', 2018, 'К345ОР136', 2800000, 3500),
('Audi Q5', 'Синий', 2019, 'Р678МН136', 6200000, 9000),
('Skoda Octavia', 'Черный', 2020, 'В123ХТ136', 4400000, 6000),
('Nissan X-Trail', 'Белый', 2021, 'Т543НК136', 5000000, 7000),
('Honda CR-V', 'Красный', 2019, 'У987ЛП136', 5600000, 7500),
('Mazda CX-5', 'Серебристый', 2022, 'М765РТ136', 5200000, 7200),
('Lexus RX 350', 'Черный', 2023, 'С109ТК136', 11200000, 17000),
('BMW 3 Series', 'Белый', 2018, 'А456КЛ136', 6400000, 9500),
('Mercedes-Benz C-Class', 'Синий', 2019, 'О321ТР136', 6800000, 9800),
('Porsche Cayenne', 'Черный', 2022, 'Н210ХО136', 13400000, 20000),
('Tesla Model 3', 'Белый', 2023, 'К876ОР136', 12000000, 18000),
('Volkswagen Passat B8', 'Серый', 2021, 'М432ХК136', 5400000, 6800),
('Chevrolet Tahoe', 'Черный', 2020, 'Т765ПР136', 9000000, 12000),
('Subaru Outback', 'Синий', 2022, 'В654ТР136', 4800000, 7000),
('Peugeot 3008', 'Белый', 2021, 'А123ОР136', 4200000, 6500),
('Jaguar F-PACE', 'Красный', 2023, 'М456ЛО136', 9200000, 14000),
('Infiniti QX50', 'Черный', 2022, 'Т567РК136', 7600000, 11000),
('Volvo XC60', 'Серебристый', 2023, 'С789МО136', 8600000, 13000),
('Mitsubishi Pajero', 'Черный', 2020, 'Н987РТ136', 7200000, 9500),
('Cadillac XT5', 'Белый', 2021, 'О654ЛП136', 8200000, 12500),
('Land Rover Defender', 'Синий', 2023, 'К765ТР136', 9800000, 15000),
('Alfa Romeo Stelvio', 'Красный', 2022, 'С543ОР136', 8700000, 13500),
('Hyundai Santa Fe', 'Черный', 2021, 'М321ТР136', 6200000, 9000),
('Ford Kuga', 'Белый', 2019, 'Н234МО136', 5400000, 7500),
('Jeep Grand Cherokee', 'Синий', 2023, 'О765ТР136', 10800000, 16000),
('Genesis GV80', 'Серебристый', 2022, 'А654ОР136', 11600000, 17500),
('Honda Pilot', 'Черный', 2021, 'Т987МО136', 6900000, 9200),
('Mazda CX-9', 'Белый', 2020, 'В123ТР136', 7400000, 9700),
('Toyota Land Cruiser 300', 'Черный', 2023, 'Т999МО136', 14500000, 21000),
('Mercedes-Benz GLS', 'Серебристый', 2023, 'А777ОР136', 15500000, 22500);

INSERT INTO Rental (client_id, car_id, start_date, end_date, rental_days) VALUES
(30, 1, CURRENT_DATE - INTERVAL '2 days', CURRENT_DATE + INTERVAL '4 days', 6),
(2, 2, CURRENT_DATE - INTERVAL '3 days', CURRENT_DATE + INTERVAL '5 days', 8),
(3, 3, CURRENT_DATE - INTERVAL '1 days', CURRENT_DATE + INTERVAL '6 days', 7),
(4, 4, CURRENT_DATE - INTERVAL '4 days', CURRENT_DATE + INTERVAL '3 days', 7),
(5, 5, CURRENT_DATE - INTERVAL '2 days', CURRENT_DATE + INTERVAL '5 days', 7),
(6, 6, CURRENT_DATE - INTERVAL '1 days', CURRENT_DATE + INTERVAL '4 days', 5),
(7, 7, CURRENT_DATE - INTERVAL '3 days', CURRENT_DATE + INTERVAL '6 days', 9),
(8, 8, CURRENT_DATE - INTERVAL '2 days', CURRENT_DATE + INTERVAL '7 days', 9),
(9, 9, CURRENT_DATE - INTERVAL '3 days', CURRENT_DATE + INTERVAL '5 days', 8),
(10, 10, CURRENT_DATE - INTERVAL '2 days', CURRENT_DATE + INTERVAL '6 days', 8),
(11, 11, CURRENT_DATE - INTERVAL '4 days', CURRENT_DATE + INTERVAL '3 days', 7),
(12, 12, CURRENT_DATE - INTERVAL '1 days', CURRENT_DATE + INTERVAL '4 days', 5),
(13, 13, CURRENT_DATE - INTERVAL '2 days', CURRENT_DATE + INTERVAL '5 days', 7),
(14, 14, CURRENT_DATE - INTERVAL '3 days', CURRENT_DATE + INTERVAL '6 days', 9),
(15, 15, CURRENT_DATE - INTERVAL '2 days', CURRENT_DATE + INTERVAL '7 days', 9),
(16, 16, CURRENT_DATE - INTERVAL '3 days', CURRENT_DATE + INTERVAL '5 days', 8),
(17, 17, CURRENT_DATE - INTERVAL '1 days', CURRENT_DATE + INTERVAL '6 days', 7),
(12, 18, CURRENT_DATE - INTERVAL '4 days', CURRENT_DATE + INTERVAL '3 days', 7),
(19, 19, CURRENT_DATE - INTERVAL '2 days', CURRENT_DATE + INTERVAL '5 days', 7),
(20, 20, CURRENT_DATE - INTERVAL '1 days', CURRENT_DATE + INTERVAL '4 days', 5),
(12, 21, CURRENT_DATE - INTERVAL '3 days', CURRENT_DATE + INTERVAL '6 days', 9),
(22, 22, CURRENT_DATE - INTERVAL '2 days', CURRENT_DATE + INTERVAL '7 days', 9),
(25, 23, CURRENT_DATE - INTERVAL '3 days', CURRENT_DATE + INTERVAL '5 days', 8),
(24, 24, CURRENT_DATE - INTERVAL '2 days', CURRENT_DATE + INTERVAL '6 days', 8),
(25, 25, CURRENT_DATE - INTERVAL '4 days', CURRENT_DATE + INTERVAL '3 days', 7),
(26, 26, CURRENT_DATE - INTERVAL '1 days', CURRENT_DATE + INTERVAL '4 days', 5),
(27, 27, CURRENT_DATE - INTERVAL '2 days', CURRENT_DATE + INTERVAL '5 days', 7),
(28, 28, CURRENT_DATE - INTERVAL '3 days', CURRENT_DATE + INTERVAL '6 days', 9),
(29, 29, CURRENT_DATE - INTERVAL '2 days', CURRENT_DATE + INTERVAL '7 days', 9),
(28, 30, CURRENT_DATE - INTERVAL '3 days', CURRENT_DATE + INTERVAL '5 days', 8),
(3, 31, CURRENT_DATE - INTERVAL '1 days', CURRENT_DATE + INTERVAL '6 days', 7),
(2, 32, CURRENT_DATE - INTERVAL '4 days', CURRENT_DATE + INTERVAL '3 days', 7),
(15, 33, CURRENT_DATE - INTERVAL '2 days', CURRENT_DATE + INTERVAL '5 days', 7),
(16, 34, CURRENT_DATE - INTERVAL '1 days', CURRENT_DATE + INTERVAL '4 days', 5),
(1, 35, CURRENT_DATE - INTERVAL '3 days', CURRENT_DATE + INTERVAL '6 days', 9),
(1, 36, CURRENT_DATE - INTERVAL '2 days', CURRENT_DATE + INTERVAL '7 days', 9),
(18, 14, CURRENT_DATE - INTERVAL '20 days', CURRENT_DATE - INTERVAL '7 days', 13),
(7, 6, CURRENT_DATE - INTERVAL '22 days', CURRENT_DATE - INTERVAL '10 days', 12),
(9, 10, CURRENT_DATE - INTERVAL '18 days', CURRENT_DATE - INTERVAL '8 days', 10),
(16, 12, CURRENT_DATE - INTERVAL '25 days', CURRENT_DATE - INTERVAL '15 days', 10),
(14, 9, CURRENT_DATE - INTERVAL '15 days', CURRENT_DATE - INTERVAL '5 days', 10),
(19, 13, CURRENT_DATE - INTERVAL '20 days', CURRENT_DATE - INTERVAL '7 days', 13),
(11, 7, CURRENT_DATE - INTERVAL '22 days', CURRENT_DATE - INTERVAL '10 days', 12),
(8, 15, CURRENT_DATE - INTERVAL '18 days', CURRENT_DATE - INTERVAL '8 days', 10),
(13, 11, CURRENT_DATE - INTERVAL '25 days', CURRENT_DATE - INTERVAL '15 days', 10),
(16, 12, CURRENT_DATE - INTERVAL '30 days', CURRENT_DATE - INTERVAL '12 days', 18),
(10, 14, CURRENT_DATE - INTERVAL '28 days', CURRENT_DATE - INTERVAL '14 days', 15),
(12, 16, CURRENT_DATE - INTERVAL '26 days', CURRENT_DATE - INTERVAL '16 days', 14),
(7, 17, CURRENT_DATE - INTERVAL '24 days', CURRENT_DATE - INTERVAL '18 days', 12),
(18, 18, CURRENT_DATE - INTERVAL '22 days', CURRENT_DATE - INTERVAL '20 days', 10),
(9, 19, CURRENT_DATE - INTERVAL '20 days', CURRENT_DATE - INTERVAL '22 days', 8),
(6, 20, CURRENT_DATE - INTERVAL '18 days', CURRENT_DATE - INTERVAL '24 days', 6),
(15, 21, CURRENT_DATE - INTERVAL '16 days', CURRENT_DATE - INTERVAL '26 days', 5),
(17, 22, CURRENT_DATE - INTERVAL '14 days', CURRENT_DATE - INTERVAL '28 days', 4),
(5, 23, CURRENT_DATE - INTERVAL '12 days', CURRENT_DATE - INTERVAL '30 days', 3),
(11, 9, CURRENT_DATE - INTERVAL '30 days', CURRENT_DATE - INTERVAL '12 days', 18);


-- Вставка тестовых данных в таблицу страховок
INSERT INTO Insurance (car_id, insurance_value, insurance_fee) VALUES
(1, 1000000, 100000),
(2, 1350000, 135000),
(3, 1600000, 160000),
(4, 4300000, 430000),
(5, 5600000, 560000),
(6, 2200000, 220000),
(7, 10400000, 1040000),
(8, 2800000, 280000),
(9, 6200000, 620000),
(10, 4400000, 440000),
(11, 5000000, 500000),
(12, 5600000, 560000),
(13, 5200000, 520000),
(14, 11200000, 1120000),
(15, 6400000, 640000),
(16, 6800000, 680000),
(17, 13400000, 1340000),
(18, 12000000, 1200000),
(19, 5400000, 540000),
(20, 9000000, 900000),
(21, 4800000, 480000),
(22, 4200000, 420000),
(23, 9200000, 920000),
(24, 7600000, 760000),
(25, 8600000, 860000),
(26, 7200000, 720000),
(27, 8200000, 820000),
(28, 9800000, 980000),
(29, 8700000, 870000),
(30, 6200000, 620000),
(31, 5400000, 540000),
(32, 10800000, 1080000),
(33, 11600000, 1160000),
(34, 6900000, 690000),
(35, 14500000, 1450000),
(36, 15500000, 1550000);

